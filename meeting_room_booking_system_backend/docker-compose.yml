version: '3.8'

services:
  meeting-room-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: meeting-room-backend
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      # 数据库配置 - 连接到外部数据库
      - MYSQL_HOST=${MYSQL_HOST:-localhost}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-meeting_room_booking_system}
      - MYSQL_LOGGING=${MYSQL_LOGGING:-true}
      - MYSQL_POOL_SIZE=${MYSQL_POOL_SIZE:-10}
      - MYSQL_SYNCHRONIZE=${MYSQL_SYNCHRONIZE:-true}
      - MYSQL_CONNECT_TIMEOUT=${MYSQL_CONNECT_TIMEOUT:-60000}
      - MYSQL_ACQUIRE_TIMEOUT=${MYSQL_ACQUIRE_TIMEOUT:-60000}
      - MYSQL_IDLE_TIMEOUT=${MYSQL_IDLE_TIMEOUT:-300000}
      
      # Redis配置 - 连接到外部Redis
      - REDIS_HOST=${REDIS_HOST:-localhost}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB:-0}
      
      # JWT配置
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRES_TIME=${JWT_ACCESS_TOKEN_EXPIRES:-30m}
      - JWT_REFRESH_TOKEN_EXPIRES_TIME=${JWT_REFRESH_TOKEN_EXPIRES:-7d}
      
      # 邮件配置
      - EMAIL_HOST=${EMAIL_HOST:-smtp.qq.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_SECURE=${EMAIL_SECURE:-false}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-会议房间预订系统}
      
      # Nest配置
      - NEST_PORT=${NEST_PORT:-3005}
    networks:
      - meeting-room-network
    depends_on:
      - wait-for-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 等待数据库和Redis启动的辅助服务
  wait-for-db:
    image: alpine:latest
    container_name: wait-for-services
    command: |
      sh -c "
        echo '等待外部服务连接...'
        while ! nc -z ${MYSQL_HOST:-localhost} ${MYSQL_PORT:-3306}; do
          echo '等待MySQL...'
          sleep 2
        done
        echo 'MySQL已就绪'
        
        while ! nc -z ${REDIS_HOST:-localhost} ${REDIS_PORT:-6379}; do
          echo '等待Redis...'
          sleep 2
        done
        echo 'Redis已就绪'
        
        echo '所有外部服务已就绪'
        exit 0
      "
    networks:
      - meeting-room-network

networks:
  meeting-room-network:
    driver: bridge

volumes:
  meeting-room-data: