version: '3.8'

services:
  meeting-room-backend-lite:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: meeting-room-backend-lite
    restart: unless-stopped
    ports:
      - "3005:3005"  # 使用3005端口
    environment:
      # 数据库配置
      - MYSQL_HOST=${MYSQL_HOST:-localhost}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-meeting_room_booking_system}
      - MYSQL_LOGGING=${MYSQL_LOGGING:-false}  # 轻量级关闭日志
      - MYSQL_POOL_SIZE=${MYSQL_POOL_SIZE:-5}  # 减少连接池
      - MYSQL_SYNCHRONIZE=${MYSQL_SYNCHRONIZE:-false}
      - MYSQL_CONNECT_TIMEOUT=${MYSQL_CONNECT_TIMEOUT:-30000}
      - MYSQL_ACQUIRE_TIMEOUT=${MYSQL_ACQUIRE_TIMEOUT:-30000}
      - MYSQL_IDLE_TIMEOUT=${MYSQL_IDLE_TIMEOUT:-60000}
      
      # Redis配置
      - REDIS_HOST=${REDIS_HOST:-remote-redis-host}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB:-1}  # 使用不同数据库避免冲突
      
      # JWT配置
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_TOKEN_EXPIRES_TIME=${JWT_ACCESS_TOKEN_EXPIRES:-30m}
      - JWT_REFRESH_TOKEN_EXPIRES_TIME=${JWT_REFRESH_TOKEN_EXPIRES:-7d}
      
      # 邮件配置
      - EMAIL_HOST=${EMAIL_HOST:-smtp.qq.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_SECURE=${EMAIL_SECURE:-false}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-会议房间预订系统}
      
      # Nest配置
      - NEST_PORT=${NEST_PORT:-3005}
    networks:
      - meeting-room-lite-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 60s  # 轻量级检查频率
      timeout: 10s
      retries: 2
      start_period: 30s

networks:
  meeting-room-lite-network:
    driver: bridge

volumes:
  meeting-room-lite-data:
